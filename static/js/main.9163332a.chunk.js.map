{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","errorImgUrl","errorImdbUrl","onChange","target","name","value","errorClear","setState","replace","onSubmit","e","preventDefault","pattern","error","test","props","addMovie","this","placeholder","required","type","Component","App","moviesFromServer","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9163332a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport './NewMovie.scss';\nimport PropTypes from 'prop-types';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    errorImgUrl: false,\n    errorImdbUrl: false,\n  };\n\n  onChange = ({ target }) => {\n    const { name, value } = target;\n    let errorClear = '';\n\n    if (name === 'imgUrl') {\n      errorClear = 'errorImgUrl';\n    }\n\n    if (name === 'imdbUrl') {\n      errorClear = 'errorImdbUrl';\n    }\n\n    this.setState({\n      [errorClear]: false,\n      [name]: value.replace(/^\\s/, ''),\n    });\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n\n    // eslint-disable-next-line max-len\n    const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n    let error = false;\n\n    if (!pattern.test(imgUrl)) {\n      error = true;\n\n      this.setState({\n        errorImgUrl: true,\n      });\n    }\n\n    if (!pattern.test(imdbUrl)) {\n      error = true;\n\n      this.setState({\n        errorImdbUrl: true,\n      });\n    }\n\n    if (!error) {\n      this.props.addMovie({\n        title,\n        description,\n        imgUrl,\n        imdbUrl,\n        imdbId,\n      });\n\n      this.setState({\n        title: '',\n        description: '',\n        imgUrl: '',\n        imdbUrl: '',\n        imdbId: '',\n      });\n    }\n  };\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      errorImgUrl,\n      errorImdbUrl,\n    } = this.state;\n\n    return (\n      <form\n        className=\"form\"\n        onSubmit={this.onSubmit}\n      >\n        <div className=\"form__lable\">\n          <input\n            className=\"form__item\"\n            value={title}\n            name=\"title\"\n            onChange={this.onChange}\n            placeholder=\"Write the title\"\n            required\n          />\n        </div>\n        <div className=\"form__lable\">\n          <input\n            className=\"form__item\"\n            value={description}\n            name=\"description\"\n            onChange={this.onChange}\n            placeholder=\"Write the description\"\n          />\n        </div>\n        <div className=\"form__lable\">\n          <input\n            className=\"form__item\"\n            value={imgUrl}\n            name=\"imgUrl\"\n            onChange={this.onChange}\n            placeholder=\"Write the imgUrl\"\n            required\n          />\n          {errorImgUrl && (\n            <p className=\"form__error\">\n            Please write the correct url\n            </p>\n          )}\n        </div>\n        <div className=\"form__lable\">\n          <input\n            className=\"form__item\"\n            value={imdbUrl}\n            name=\"imdbUrl\"\n            onChange={this.onChange}\n            placeholder=\"Write the imdbUrl\"\n            required\n          />\n          {errorImdbUrl && (\n            <p className=\"form__error\">\n            Please write the correct url\n            </p>\n          )}\n        </div>\n        <div className=\"form__lable\">\n          <input\n            className=\"form__item\"\n            value={imdbId}\n            name=\"imdbId\"\n            onChange={this.onChange}\n            placeholder=\"Write the imdbId\"\n            required\n          />\n        </div>\n        <button\n          className=\"form__movie\"\n          type=\"submit\"\n        >\n          Add Movie\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(prevState => ({\n      movies: [...prevState.movies, movie],\n    }));\n  }\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}